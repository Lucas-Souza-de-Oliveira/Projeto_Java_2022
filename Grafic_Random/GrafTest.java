/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package treinografc;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author lucas
 */
public class GrafTest extends javax.swing.JFrame {

    /**
     * Creates new form GrafTest
     */
    public GrafTest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Tabela Exercicio 2");

        jButton1.setBackground(new java.awt.Color(0, 93, 163));
        jButton1.setText("Atualizar tabela");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jTable1.setBackground(new java.awt.Color(102, 102, 102));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Menino", null, null, null, null, null, null, null, null},
                {"Menina", null, null, null, null, null, null, null, null},
                {"Total", null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Resultado", "n = 10", "10%", "n = 100", "100%", "n = 1000", "1000%", "n = 10000", "10000%"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTable1);

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Tabela Exercicio 1");

        jButton2.setBackground(new java.awt.Color(0, 93, 163));
        jButton2.setText("Atualizar tabela");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jTable4.setBackground(new java.awt.Color(102, 102, 102));
        jTable4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Menino", null, null, null, null, null, null, null, null},
                {"Menina", null, null, null, null, null, null, null, null},
                {"Total", null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Resultado", "n = 10", "10%", "n = 100", "100%", "n = 1000", "1000%", "n = 10000", "10000%"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setShowHorizontalLines(true);
        jTable4.setShowVerticalLines(true);
        jScrollPane7.setViewportView(jTable4);

        jDesktopPane4.setLayer(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(115, 115, 115))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static ArrayList<numbsAle> dataBasu = new ArrayList<numbsAle>();
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int boy10 = 0, boy100 = 0, boy1000 = 0, boy10000 = 0;
        int girl10 = 0, girl100 = 0, girl1000 = 0, girl10000 = 0;
        int total10, total100, total1000, total10000;
        double percentBoy10 = 0, percentBoy100 = 0, percentBoy1000 = 0, percentBoy10000 = 0;
        double percentGirl10 = 0, percentGirl100 = 0, percentGirl1000 = 0, percentGirl10000 = 0;
        double percentTotal10, percentTotal100, percentTotal1000, percentTotal10000;
        int[] numb = new int[10000]; //Variavel para armazenar os números aleatorios
        Random random = new Random();

        for(int i = 0; i<10000; i++){          //Gerando 10.000 números
            numb[i] = 1 + random.nextInt(10); //Colocando para ser entre 10 e 1
        }

        for(int a = 0; a < 10; a++){ //Verificando números de 1 até 10
            if(numb[a] < 4){
                boy10 = boy10 + 1;
            }else if(numb[a] >= 4){
                girl10 = girl10 + 1;
            }
        }

        for(int a = 10; a < 100; a++){ //Verificando números de 10 até 100
            if(numb[a] < 4){
                boy100 = boy100 + 1;
            }else if(numb[a] >= 4){
                girl100 = girl100 + 1;
            }
        }

        for(int a = 100; a < 1000; a++){ //Verificando números de 100 até 1000
            if(numb[a] < 4){
                boy1000 = boy1000 + 1;
            }else if(numb[a] >= 4){
                girl1000 = girl1000 + 1;
            }
        }

        for(int a = 1000; a < 10000; a++){ //Verificando números de 1000 até 10000
            if(numb[a] < 4){
                boy10000 = boy10000 + 1;
            }else if(numb[a] >= 4){
                girl10000 = girl10000 + 1;
            }
        }

        //Calculando valores independentes
        boy100 = boy100 + boy10;
        girl100 = girl100 + girl10;
        boy1000 = boy1000 + boy100;
        girl1000 = girl1000 + girl100;
        boy10000 = boy10000 + boy1000;
        girl10000 = girl10000 + girl1000;
        
        //Calculando porcentagens
        percentBoy10 = ((double) boy10/((10/100)+1))*10; //Feito assim pq a formula utilizada nos outros dava erro
        percentGirl10 = ((double) girl10/((10/100)+1))*10;
        percentBoy100 = (double) boy100;
        percentGirl100 = (double) girl100;
        percentBoy1000 = (double) boy1000/(1000/100);
        percentGirl1000 = (double) girl1000/(1000/100);
        percentBoy10000 = (double) boy10000/(10000/100);
        percentGirl10000 = (double) girl10000/(10000/100);
        
        //Calculando total das porcentagens
        percentTotal10 = percentBoy10 + percentGirl10;
        percentTotal100 = percentBoy100 + percentGirl100;
        percentTotal1000 = percentBoy1000 + percentGirl1000;
        percentTotal10000 = percentBoy10000 + percentGirl10000;

        //Convertendo valores para strings
        String strBoy10 = String.valueOf(boy10);
        String strgirl10 = String.valueOf(girl10);
        String strBoy100 = String.valueOf(boy100);
        String strgirl100 = String.valueOf(girl100);
        String strBoy1000 = String.valueOf(boy1000);
        String strgirl1000 = String.valueOf(girl1000);
        String strBoy10000 = String.valueOf(boy10000);
        String strgirl10000 = String.valueOf(girl10000);
        
        //Convertendo porcentagens para strings
        String strPercentBoy10 = String.valueOf(percentBoy10);
        String strPercentGirl10 = String.valueOf(percentGirl10);
        String strPercentBoy100 = String.valueOf(percentBoy100);
        String strPercentGirl100 = String.valueOf(percentGirl100);
        String strPercentBoy1000 = String.valueOf(percentBoy1000);
        String strPercentGirl1000 = String.valueOf(percentGirl1000);
        String strPercentBoy10000 = String.valueOf(percentBoy10000);
        String strPercentGirl10000 = String.valueOf(percentGirl10000);
        
        //Convertendo porcentagens totais para strings
        String strPercentTotal10 = String.valueOf(percentTotal10);
        String strPercentTotal100 = String.valueOf(percentTotal100);
        String strPercentTotal1000 = String.valueOf(percentTotal1000);
        String strPercentTotal10000 = String.valueOf(percentTotal10000);

        //Calculando valores totais
        total10 = boy10 + girl10;
        total100 = boy100 + girl100;
        total1000 = boy1000 + girl1000;
        total10000 = boy10000 + girl10000;

        //Convertendo para string os totais
        String strtotal10 = String.valueOf(total10);
        String strtotal100 = String.valueOf(total100);
        String strtotal1000 = String.valueOf(total1000);
        String strtotal10000 = String.valueOf(total10000);
        
        //Enviando dados para a criação do grafico
        dataBasu.add(new numbsAle(boy10, "Menino 10%"));
        dataBasu.add(new numbsAle(girl10, "Menina 10%"));
        dataBasu.add(new numbsAle(boy100, "Menino 100%"));
        dataBasu.add(new numbsAle(girl100, "Menina 100%"));
        dataBasu.add(new numbsAle(boy1000, "Menino 1000%"));
        dataBasu.add(new numbsAle(girl1000, "Menina 1000%"));
        dataBasu.add(new numbsAle(boy10000, "Menino 10000%"));
        dataBasu.add(new numbsAle(girl10000, "Menina 10000%"));
        
        if(dataBasu.isEmpty()){
            System.out.println("\n\nEstá vazio\n");
        }
        
        this.jPanel2.removeAll();
        Grafico graficBar = new Grafico();
        this.jPanel2.setLayout(new BorderLayout());
        this.jPanel2.add(graficBar.criarGrafico(dataBasu));
        
        pack();

        jTable1 = new javax.swing.JTable();

        jTable1.setBackground(new java.awt.Color(102, 102, 102));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Menino", strBoy10, strPercentBoy10, strBoy100, strPercentBoy100, strBoy1000, strPercentBoy1000, strBoy10000, strPercentBoy10000},
                {"Menina", strgirl10, strPercentGirl10, strgirl100, strPercentGirl100, strgirl1000, strPercentGirl1000, strgirl10000, strPercentGirl10000},
                {"Total", strtotal10, strPercentTotal10, strtotal100, strPercentTotal100, strtotal1000, strPercentTotal1000, strtotal10000, strPercentTotal10000}
            },
            new String [] {
                "Resultado", "n = 10", "10%", "n = 100", "100%", "n = 1000", "1000%", "n = 10000", "10000%"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTable1);
        
        dataBasu.clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int boy10 = 0, boy100 = 0, boy1000 = 0, boy10000 = 0;
        int girl10 = 0, girl100 = 0, girl1000 = 0, girl10000 = 0;
        int total10, total100, total1000, total10000;
        double percentBoy10 = 0, percentBoy100 = 0, percentBoy1000 = 0, percentBoy10000 = 0;
        double percentGirl10 = 0, percentGirl100 = 0, percentGirl1000 = 0, percentGirl10000 = 0;
        double percentTotal10, percentTotal100, percentTotal1000, percentTotal10000;
        double[] numb = new double[10000]; //Variavel para armazenar os números aleatorios
        
        for(int i = 0; i<10000; i++){ //Gerando 10.000 números
            numb[i] = Math.random();
        }

        for(int a = 0; a < 10; a++){ //Verificando números de 1 até 10
            if(numb[a] < 0.5){
                boy10 = boy10 + 1;
            }else if(numb[a] >= 0.5){
                girl10 = girl10 + 1;
            }
        }

        for(int a = 10; a < 100; a++){ //Verificando números de 10 até 100
            if(numb[a] < 0.5){
                boy100 = boy100 + 1;
            }else if(numb[a] >= 0.5){
                girl100 = girl100 + 1;
            }
        }

        for(int a = 100; a < 1000; a++){ //Verificando números de 100 até 1000
            if(numb[a] < 0.5 ){
                boy1000 = boy1000 + 1;
            }else if(numb[a] >= 0.5){
                girl1000 = girl1000 + 1;
            }
        }

        for(int a = 1000; a < 10000; a++){ //Verificando números de 1000 até 10000
            if(numb[a] < 0.5){
                boy10000 = boy10000 + 1;
            }else if(numb[a] >= 0.5){
                girl10000 = girl10000 + 1;
            }
        }

        //Calculando valores independentes
        boy100 = boy100 + boy10;
        girl100 = girl100 + girl10;
        boy1000 = boy1000 + boy100;
        girl1000 = girl1000 + girl100;
        boy10000 = boy10000 + boy1000;
        girl10000 = girl10000 + girl1000;
        
        //Calculando porcentagens
        percentBoy10 = ((double) boy10/((10/100)+1))*10; //Feito assim pq a formula utilizada nos outros dava erro
        percentGirl10 = ((double) girl10/((10/100)+1))*10;
        percentBoy100 = (double) boy100;
        percentGirl100 = (double) girl100;
        percentBoy1000 = (double) boy1000/(1000/100);
        percentGirl1000 = (double) girl1000/(1000/100);
        percentBoy10000 = (double) boy10000/(10000/100);
        percentGirl10000 = (double) girl10000/(10000/100);
        
        //Calculando total das porcentagens
        percentTotal10 = percentBoy10 + percentGirl10;
        percentTotal100 = percentBoy100 + percentGirl100;
        percentTotal1000 = percentBoy1000 + percentGirl1000;
        percentTotal10000 = percentBoy10000 + percentGirl10000;

        //Convertendo valores para strings
        String strBoy10 = String.valueOf(boy10);
        String strgirl10 = String.valueOf(girl10);
        String strBoy100 = String.valueOf(boy100);
        String strgirl100 = String.valueOf(girl100);
        String strBoy1000 = String.valueOf(boy1000);
        String strgirl1000 = String.valueOf(girl1000);
        String strBoy10000 = String.valueOf(boy10000);
        String strgirl10000 = String.valueOf(girl10000);
        
        //Convertendo porcentagens para strings
        String strPercentBoy10 = String.valueOf(percentBoy10);
        String strPercentGirl10 = String.valueOf(percentGirl10);
        String strPercentBoy100 = String.valueOf(percentBoy100);
        String strPercentGirl100 = String.valueOf(percentGirl100);
        String strPercentBoy1000 = String.valueOf(percentBoy1000);
        String strPercentGirl1000 = String.valueOf(percentGirl1000);
        String strPercentBoy10000 = String.valueOf(percentBoy10000);
        String strPercentGirl10000 = String.valueOf(percentGirl10000);
        
        //Convertendo porcentagens totais para strings
        String strPercentTotal10 = String.valueOf(percentTotal10);
        String strPercentTotal100 = String.valueOf(percentTotal100);
        String strPercentTotal1000 = String.valueOf(percentTotal1000);
        String strPercentTotal10000 = String.valueOf(percentTotal10000);

        //Calculando valores totais
        total10 = boy10 + girl10;
        total100 = boy100 + girl100;
        total1000 = boy1000 + girl1000;
        total10000 = boy10000 + girl10000;

        //Convertendo para string os totais
        String strtotal10 = String.valueOf(total10);
        String strtotal100 = String.valueOf(total100);
        String strtotal1000 = String.valueOf(total1000);
        String strtotal10000 = String.valueOf(total10000);
        
        //Enviando dados para criação do grafico
        dataBasu.add(new numbsAle(boy10, "Menino 10%"));
        dataBasu.add(new numbsAle(girl10, "Menina 10%"));
        dataBasu.add(new numbsAle(boy100, "Menino 100%"));
        dataBasu.add(new numbsAle(girl100, "Menina 100%"));
        dataBasu.add(new numbsAle(boy1000, "Menino 1000%"));
        dataBasu.add(new numbsAle(girl1000, "Menina 1000%"));
        dataBasu.add(new numbsAle(boy10000, "Menino 10000%"));
        dataBasu.add(new numbsAle(girl10000, "Menina 10000%"));
        
        //Verificação
        if(dataBasu.isEmpty()){
            System.out.println("\n\nTá vazio\n");
        }
        
        this.jPanel2.removeAll();
        Grafico graficBar = new Grafico();
        this.jPanel2.setLayout(new BorderLayout());
        this.jPanel2.add(graficBar.criarGrafico(dataBasu));
        
        pack();

        jTable4 = new javax.swing.JTable();

        jTable4.setBackground(new java.awt.Color(102, 102, 102));
        jTable4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Menino", strBoy10, strPercentBoy10, strBoy100, strPercentBoy100, strBoy1000, strPercentBoy1000, strBoy10000, strPercentBoy10000},
                {"Menina", strgirl10, strPercentGirl10, strgirl100, strPercentGirl100, strgirl1000, strPercentGirl1000, strgirl10000, strPercentGirl10000},
                {"Total", strtotal10, strPercentTotal10, strtotal100, strPercentTotal100, strtotal1000, strPercentTotal1000, strtotal10000, strPercentTotal10000}
            },
            new String [] {
                "Resultado", "n = 10", "10%", "n = 100", "100%", "n = 1000", "1000%", "n = 10000", "10000%"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setShowHorizontalLines(true);
        jTable4.setShowVerticalLines(true);
        jScrollPane7.setViewportView(jTable4);
        
        dataBasu.clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrafTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrafTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrafTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrafTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GrafTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
